---
import "../styles/global.css";
import {ClientRouter} from 'astro:transitions';
import RoundedLink from "../components/roundedLink.astro";
import SignInWithSpotify from "../components/signInWithSpotify.astro";
---
<html class="flex justify-center items-center" lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta name="generator" content={Astro.generator}/>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <ClientRouter/>
</head>

<body class="flex justify-center items-center w-[60rem] pt-8">
<header class="w-full flex !justify-between h-12 gap-12">

    <RoundedLink iconSrc="/dist/icons/home_icon.svg" link="/"></RoundedLink>

    <div class="search-wrapper relative w-[540px] my-0 mx-auto">

        <div id="btn-search"
             class="flex items-center pl-[20px] rounded-3xl w-full h-12 text-xl border-none outline-0 bg-backgroundPrimary mb-2.5">
            <p class="mb-0">Buscar</p>
        </div>

        <div id="barra-busqueda"
             class="hidden absolute top-0 left-0 w-full p-5 pt-0 bg-backgroundPrimary rounded-3xl z-10 shadow-md">
            <input type="text" class="w-full h-12 text-xl border-none outline-0 bg-backgroundPrimary mb-2.5"
                   placeholder="Buscar..."/>
            <ul class="w-full list-none p-0 m-0" id="box-search">
                <li class="w-full"><i class="fa-thin fa-magnifying-glass"></i> Opción 1</li>
                <li class="w-full"><i class="fa-thin fa-magnifying-glass"></i> Opción 2</li>
                <li class="w-full"><i class="fa-thin fa-magnifying-glass"></i> Opción 3</li>
                <li class="w-full"><i class="fa-thin fa-magnifying-glass"></i> Opción 4</li>
            </ul>
        </div>

    </div>

    <SignInWithSpotify/>

    <RoundedLink iconSrc="/dist/icons/profile_icon.svg" link="/profile"></RoundedLink>
</header>

    <slot/>

<!--
<footer>
    <p class="text_weight_bold text_color_dark text_size_medium">
        Tekkure Systems &copy; <span>{currentYear}</span>
    </p>
</footer>
-->

<script>
    const client_id="8081705010b9456a9d67e1451789c2f0"; //token de la api: ids, pagina donde se redirige y permisos
    const client_secret="d7107b87854c429c805f5250dc406d03";
    const redirect_uri = "https://darkturquoise-seahorse-894972.hostingersite.com/"
    const scope = "user-top-read user-read-playback-state user-read-currently-playing"

    const auth_url = "https://accounts.spotify.com/authorize" //autorizacion del usuario con boton: respuesta code esperada y parametros
    const params = new URLSearchParams({
        response_type: "code",
        client_id: client_id,
        scope: scope,
        redirect_uri: redirect_uri,
    }).toString();

    const btnLogin = document.getElementById('autorizar');
    const btnSearch = document.getElementById('btn-search');
    const barraBusqueda = document.getElementById('barra-busqueda');
    const searchWrapper = document.querySelector('.search-wrapper');
    
    btnLogin?.addEventListener("click",(e)=>{
        e.preventDefault();
        const spotifyLink = `${auth_url}?${params}`;
        window.location.href = spotifyLink;
    }); //listener de login, tenemos que hacer que verifique que ya inicio y hacerle una condicional

    const code = new URLSearchParams(window.location.search).get("code");
    if (code) { //cuando si estas logeado
        obtenerToken(code).then(token => { 
        localStorage.setItem("spotify_token", token); //uso similar a session de php, hace ualmacenamiento local del login
    });
    }

    btnSearch.addEventListener('click', () => {
        btnSearch.style.display = 'none';
        barraBusqueda.style.display = 'block';
    });

    // Detectar clic fuera de la barra de búsqueda
    document.addEventListener('click', (e) => {
        const isClickInside = searchWrapper.contains(e.target);

        if (!isClickInside) {
            barraBusqueda.style.display = 'none';
            btnSearch.style.display = 'flex';
        }
    });

    async function obtenerToken(code) {
    const b64 = btoa(`${client_id}:${client_secret}`);
    
    const res = await fetch("https://accounts.spotify.com/api/token", {
        method: "POST",
        headers: {
            "Authorization": `Basic ${b64}`,
            "Content-Type": "application/x-www-form-urlencoded"
        },
        body: new URLSearchParams({
            grant_type: "authorization_code",
            code: code,
            redirect_uri: redirect_uri
        })
    });

    const data = await res.json();
    return data.access_token.toString();
}
</script>

</body>
</html>

<style>
    @import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');

    main {
        flex-grow: 1; /* Esto asegura que el main ocupe el espacio restante */
        padding: 1.5rem;
        overflow: auto;
    }

    #box-search li {
        padding: 10px 20px;
        background-color: #a393e6;
        margin-bottom: 20px;
        border-radius: 30px;
        color: white;
        cursor: pointer;
        transition: background 0.3s;
    }

    #box-search li:hover {
        background-color: #8a7cd1;
    }

    button {

    }

    .search-container {
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 50%;
    }
</style>