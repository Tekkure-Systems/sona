---
import "../styles/global.css";
import {ClientRouter} from 'astro:transitions';
import RoundedLink from "../components/roundedLink.astro";
import SignInWithSpotify from "../components/signInWithSpotify.astro";
import SearchBar from "../components/searchBar.astro";
---
<html class="flex justify-center items-center" lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta name="generator" content={Astro.generator}/>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <ClientRouter/>
</head>
<<<<<<< HEAD
<body>
      
        <header>
          <RoundedLink />
        
          <div class="search-wrapper">
            <!-- Botón visible inicialmente -->
            <div id="btn-search" class="search-input">
              <p>Buscar</p>
            </div>
        
            <!-- Barra con input y opciones -->
            <div id="barra-busqueda" style="display: none;">
              <input type="text" class="search-input" placeholder="Buscar..." />
        
              <!-- Lista dentro del wrapper -->
              <ul id="box-search">
                <li><i class="fa-thin fa-magnifying-glass"></i> Opción 1</li>
                <li><i class="fa-thin fa-magnifying-glass"></i> Opción 2</li>
                <li><i class="fa-thin fa-magnifying-glass"></i> Opción 3</li>
                <li><i class="fa-thin fa-magnifying-glass"></i> Opción 4</li>
              </ul>
            </div>
          </div>
      
        <RoundedLink />
      </header>
      
      <!-- Fondo oscuro oculto -->
      <div id="cover" style="display: none;"></div>
      
      <main>
        <slot />
      </main>
<body class="flex justify-center items-center w-[60rem] pt-8">

<header class="w-full !justify-between">
	<RoundedLink iconSrc="/dist/icons/home_icon.svg" link="/"></RoundedLink>

    <div class="search-container">
        <input type="search" class="search-input" placeholder="Buscar...">
    </div>

    	<RoundedLink iconSrc="/dist/icons/profile_icon.svg" link="/profile"></RoundedLink>
=======
<body class="flex flex-column justify-center items-center w-[70rem] pt-8 gap-12">
<header class="w-full flex !justify-between h-12 gap-12">
    <RoundedLink iconSrc="/dist/icons/home_icon.svg" link="/"></RoundedLink>
    <SearchBar/>
    <SignInWithSpotify/>
        <!--<RoundedLink iconSrc="/dist/icons/profile_icon.svg" link="/profile"></RoundedLink>-->
>>>>>>> e20caadf660df261711b3978a620f699a9ff2b5b
</header>
<slot/>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const client_id = "8081705010b9456a9d67e1451789c2f0";
        const client_secret = "d7107b87854c429c805f5250dc406d03";
        const redirect_uri = "https://darkturquoise-seahorse-894972.hostingersite.com/";
        const scope = "user-top-read user-read-playback-state user-read-currently-playing user-read-recently-played";
        const auth_url = "https://accounts.spotify.com/authorize";
        const params = new URLSearchParams({
            response_type: "code",
            client_id: client_id,
            scope: scope,
            redirect_uri: redirect_uri,
        }).toString();
        const btnLogin = document.getElementById('autorizar');
        if (btnLogin) {
            btnLogin.addEventListener("click", (e) => {
                e.preventDefault();
                const spotifyLink = `${auth_url}?${params}`;
                window.location.href = spotifyLink;
            });
        }
        const code = new URLSearchParams(window.location.search).get("code");
        if (code) {
            obtenerToken(code).then(token => {
                localStorage.setItem("spotify_token", token);
            });
        }
        async function obtenerToken(code) {
            const b64 = btoa(`${client_id}:${client_secret}`);
            const res = await fetch("https://accounts.spotify.com/api/token", {
                method: "POST",
                headers: {
                    "Authorization": `Basic ${b64}`,
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                body: new URLSearchParams({
                    grant_type: "authorization_code",
                    code: code,
                    redirect_uri: redirect_uri
                })
            });

<<<<<<< HEAD
<main>
    <slot/>
</main>

      <script>
        const btnSearch = document.getElementById('btn-search');
        const barraBusqueda = document.getElementById('barra-busqueda');
        const searchWrapper = document.querySelector('.search-wrapper');
      
        btnSearch.addEventListener('click', () => {
          btnSearch.style.display = 'none';
          barraBusqueda.style.display = 'block';
        });
      
        // Detectar clic fuera de la barra de búsqueda
        document.addEventListener('click', (e) => {
          const isClickInside = searchWrapper.contains(e.target);
      
          if (!isClickInside) {
            barraBusqueda.style.display = 'none';
            btnSearch.style.display = 'flex';
          }
        });
      </script>
      
      
=======
            const data = await res.json();
            return data.access_token.toString();
        }
    });
</script>
>>>>>>> e20caadf660df261711b3978a620f699a9ff2b5b
</body>
</html>
<style>
    @import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');
    main {
        flex-grow: 1;
        padding: 1.5rem;
        overflow: auto;
    }
</style>